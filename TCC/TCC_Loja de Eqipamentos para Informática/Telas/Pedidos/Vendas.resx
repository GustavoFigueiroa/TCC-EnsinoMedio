<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="clienteBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="clienteBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>