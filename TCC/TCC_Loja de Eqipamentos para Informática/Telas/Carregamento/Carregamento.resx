<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>